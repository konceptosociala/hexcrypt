var searchIndex = JSON.parse('{\
"hexcrypt":{"doc":"<code>hexcrypt</code> is a CLI application to convert UTF-8 encoded …","t":"DLLLLLLAMLLLAMALLLLLLLFMMLLLLLFFFNNEGNNNLLLLLLLLLLLLLLLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","decrypt","decrypt","deref","deref_mut","drop","encrypt","encrypt","error","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","output","size","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","decrypt","encrypt","parse_size","BytesToString","CannotCreateImage","HexCryptError","HexCryptResult","ImageError","InvalidImageSize","IoError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","init","into","provide","source","to_string","try_from","try_into","type_id"],"q":[[0,"hexcrypt"],[30,"hexcrypt::decrypt"],[31,"hexcrypt::encrypt"],[33,"hexcrypt::error"]],"d":["The <code>Args</code> struct represents the command-line arguments for …","","","","","","","The <code>decrypt</code> module contains functionality related to …","Path to the image to be decrypted.","","","","The <code>encrypt</code> module contains functionality related to …","Path to the text file to be encrypted.","The <code>error</code> module contains custom error types and error …","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","The main function of the <code>hexcrypt</code> application.","Path to the output file (optional)","Whether use custom size of an image. E.g. <code>-s 16x32</code>","","","","","","Decrypts the RGB image from the specified file and …","Encrypts the UTF-8 encoded text from the specified file …","Parses the custom size string into a tuple of width and …","Represents an error that occurs when image bytes cannot be …","Represents an error that occurs when an image cannot be …","Custom error type for the <code>hexcrypt</code> application.","Alias for a <code>Result</code> that uses the <code>HexCryptError</code> enum as the …","Represents an error related to image processing.","Represents an error related to an invalid image size.","Represents an I/O error.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,3,3,3,3,3,3,0,3,3,3,3,0,3,0,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,0,0,17,17,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"f":[0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,0,[2],[2],[2],0,0,0,[[3,4],5],[[]],[6,[[8,[3,7]]]],[6,[[8,[3,7]]]],[[],[[10,[9]]]],[[],2],[[]],[[],11],0,0,[[],8],[[],8],[[],12],[[3,6],[[8,[7]]]],[[3,6],[[8,[7]]]],[[[0,[[14,[13]],15]],[10,[16]]],[[8,[17]]]],[[[0,[[14,[13]],15]],[10,[18]],[10,[16]]],[[8,[17]]]],[19,[[8,[17]]]],0,0,0,0,0,0,0,[[]],[[]],[2],[2],[2],[[17,4],5],[[17,4],5],[20,17],[21,17],[[]],[22,17],[[],2],[[]],[23],[17,[[10,[24]]]],[[],18],[[],8],[[],8],[[],12]],"c":[],"p":[[3,"Command"],[15,"usize"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[6,"Result"],[3,"TypeId"],[3,"Path"],[8,"AsRef"],[8,"Clone"],[3,"PathBuf"],[4,"HexCryptError"],[3,"String"],[15,"str"],[3,"Error"],[3,"FromUtf8Error"],[4,"ImageError"],[3,"Demand"],[8,"Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
